-- PCM Project Database Schema
-- This script creates all tables and indexes for the PCM system

-- Drop tables if they exist (for development purposes)
DROP TABLE IF EXISTS ATTENDANCE CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS DUTY_ROSTERS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS ANNOUNCEMENTS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS REPORT_ATTACHMENTS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS DAILY_REPORTS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS WBS_CHANGE_LOGS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS WBS_ITEMS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS PERSONNEL CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS SUBCONTRACTORS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS USER_ROLES CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS ROLES CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS PROJECTS CASCADE CONSTRAINTS;
DROP TABLE IF EXISTS USERS CASCADE CONSTRAINTS;

-- 使用者表
CREATE TABLE USERS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(255) NOT NULL UNIQUE,
    hashed_password VARCHAR2(255) NOT NULL,
    full_name NVARCHAR2(255),
    email VARCHAR2(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 專案表
CREATE TABLE PROJECTS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name NVARCHAR2(255) NOT NULL,
    code VARCHAR2(50) UNIQUE,
    status NVARCHAR2(50),
    start_date DATE,
    planned_submission_date DATE,
    total_duration_days NUMBER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 角色表
CREATE TABLE ROLES (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(255) NOT NULL UNIQUE,
    description NVARCHAR2(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 使用者角色關聯表
CREATE TABLE USER_ROLES (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    role_id NUMBER NOT NULL,
    project_id NUMBER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(id),
    FOREIGN KEY (role_id) REFERENCES ROLES(id),
    FOREIGN KEY (project_id) REFERENCES PROJECTS(id),
    UNIQUE(user_id, role_id, project_id)
);

-- 協力廠商表
CREATE TABLE SUBCONTRACTORS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name NVARCHAR2(255) NOT NULL,
    contact_person NVARCHAR2(255),
    phone VARCHAR2(50),
    email VARCHAR2(255),
    address NVARCHAR2(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 廠商人員表
CREATE TABLE PERSONNEL (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subcontractor_id NUMBER NOT NULL,
    name NVARCHAR2(255) NOT NULL,
    position NVARCHAR2(255),
    phone VARCHAR2(50),
    email VARCHAR2(255),
    employee_id VARCHAR2(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (subcontractor_id) REFERENCES SUBCONTRACTORS(id)
);

-- 工作分解結構項目表
CREATE TABLE WBS_ITEMS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id NUMBER NOT NULL,
    parent_id NUMBER,
    code VARCHAR2(50) NOT NULL,
    name NVARCHAR2(255) NOT NULL,
    description NVARCHAR2(1000),
    level_number NUMBER DEFAULT 1,
    sort_order NUMBER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES PROJECTS(id),
    FOREIGN KEY (parent_id) REFERENCES WBS_ITEMS(id)
);

-- WBS 變更紀錄表
CREATE TABLE WBS_CHANGE_LOGS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    wbs_item_id NUMBER NOT NULL,
    changed_by NUMBER NOT NULL,
    change_type VARCHAR2(50) NOT NULL,
    old_value CLOB,
    new_value CLOB,
    change_reason NVARCHAR2(500),
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (wbs_item_id) REFERENCES WBS_ITEMS(id),
    FOREIGN KEY (changed_by) REFERENCES USERS(id)
);

-- 每日報告表
CREATE TABLE DAILY_REPORTS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id NUMBER NOT NULL,
    reported_by NUMBER NOT NULL,
    report_date DATE NOT NULL,
    content CLOB,
    weather NVARCHAR2(100),
    progress_notes CLOB,
    issues CLOB,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES PROJECTS(id),
    FOREIGN KEY (reported_by) REFERENCES USERS(id)
);

-- 報告附件表
CREATE TABLE REPORT_ATTACHMENTS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    daily_report_id NUMBER NOT NULL,
    filename NVARCHAR2(255) NOT NULL,
    file_path VARCHAR2(500) NOT NULL,
    file_size NUMBER,
    mime_type VARCHAR2(100),
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (daily_report_id) REFERENCES DAILY_REPORTS(id)
);

-- 公告表
CREATE TABLE ANNOUNCEMENTS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id NUMBER,
    title NVARCHAR2(255) NOT NULL,
    content CLOB NOT NULL,
    created_by NUMBER NOT NULL,
    is_active NUMBER(1) DEFAULT 1,
    priority VARCHAR2(20) DEFAULT 'normal',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES PROJECTS(id),
    FOREIGN KEY (created_by) REFERENCES USERS(id)
);

-- 值班表
CREATE TABLE DUTY_ROSTERS (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id NUMBER NOT NULL,
    personnel_id NUMBER NOT NULL,
    duty_date DATE NOT NULL,
    shift_type VARCHAR2(50) DEFAULT 'day',
    notes NVARCHAR2(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (project_id) REFERENCES PROJECTS(id),
    FOREIGN KEY (personnel_id) REFERENCES PERSONNEL(id),
    UNIQUE(project_id, personnel_id, duty_date, shift_type)
);

-- 出勤紀錄表
CREATE TABLE ATTENDANCE (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    personnel_id NUMBER NOT NULL,
    project_id NUMBER NOT NULL,
    check_in_time TIMESTAMP,
    check_out_time TIMESTAMP,
    work_date DATE NOT NULL,
    hours_worked NUMBER(4,2),
    work_type VARCHAR2(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (personnel_id) REFERENCES PERSONNEL(id),
    FOREIGN KEY (project_id) REFERENCES PROJECTS(id)
);

-- Create indexes for better performance
CREATE INDEX idx_users_username ON USERS(username);
CREATE INDEX idx_users_email ON USERS(email);
CREATE INDEX idx_projects_code ON PROJECTS(code);
CREATE INDEX idx_projects_status ON PROJECTS(status);
CREATE INDEX idx_user_roles_user_id ON USER_ROLES(user_id);
CREATE INDEX idx_user_roles_role_id ON USER_ROLES(role_id);
CREATE INDEX idx_user_roles_project_id ON USER_ROLES(project_id);
CREATE INDEX idx_personnel_subcontractor_id ON PERSONNEL(subcontractor_id);
CREATE INDEX idx_personnel_employee_id ON PERSONNEL(employee_id);
CREATE INDEX idx_wbs_items_project_id ON WBS_ITEMS(project_id);
CREATE INDEX idx_wbs_items_parent_id ON WBS_ITEMS(parent_id);
CREATE INDEX idx_wbs_items_code ON WBS_ITEMS(code);
CREATE INDEX idx_wbs_change_logs_wbs_item_id ON WBS_CHANGE_LOGS(wbs_item_id);
CREATE INDEX idx_wbs_change_logs_changed_by ON WBS_CHANGE_LOGS(changed_by);
CREATE INDEX idx_daily_reports_project_id ON DAILY_REPORTS(project_id);
CREATE INDEX idx_daily_reports_reported_by ON DAILY_REPORTS(reported_by);
CREATE INDEX idx_daily_reports_report_date ON DAILY_REPORTS(report_date);
CREATE INDEX idx_report_attachments_daily_report_id ON REPORT_ATTACHMENTS(daily_report_id);
CREATE INDEX idx_announcements_project_id ON ANNOUNCEMENTS(project_id);
CREATE INDEX idx_announcements_created_by ON ANNOUNCEMENTS(created_by);
CREATE INDEX idx_announcements_is_active ON ANNOUNCEMENTS(is_active);
CREATE INDEX idx_duty_rosters_project_id ON DUTY_ROSTERS(project_id);
CREATE INDEX idx_duty_rosters_personnel_id ON DUTY_ROSTERS(personnel_id);
CREATE INDEX idx_duty_rosters_duty_date ON DUTY_ROSTERS(duty_date);
CREATE INDEX idx_attendance_personnel_id ON ATTENDANCE(personnel_id);
CREATE INDEX idx_attendance_project_id ON ATTENDANCE(project_id);
CREATE INDEX idx_attendance_work_date ON ATTENDANCE(work_date);

COMMIT;